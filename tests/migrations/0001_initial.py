# Generated by Django 3.0.6 on 2020-12-07 04:49

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='NewProject',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('project_name', models.CharField(max_length=200)),
                ('lab_name', models.CharField(max_length=200)),
                ('contractor', models.CharField(max_length=200)),
                ('consultant', models.CharField(max_length=200)),
                ('contract_no', models.PositiveIntegerField()),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='cementSettingTime',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_name', models.CharField(default='Cement Setting Time Test', max_length=500)),
                ('time_of_adding_water', models.PositiveIntegerField(blank=True, null=True)),
                ('time_of_initial_setting', models.PositiveIntegerField(blank=True, null=True)),
                ('time_of_final_setting', models.PositiveIntegerField(blank=True, null=True)),
                ('lab_ref_no', models.PositiveIntegerField(blank=True, null=True)),
                ('sample_location', models.CharField(max_length=100)),
                ('cement_brand_or_source', models.CharField(max_length=100)),
                ('date_of_testing', models.PositiveIntegerField(blank=True, null=True)),
                ('date_of_sampling', models.PositiveIntegerField(blank=True, null=True)),
                ('sampled_by', models.CharField(max_length=500)),
                ('initial_setting_time', models.FloatField(blank=True, null=True)),
                ('final_setting_time', models.FloatField(blank=True, null=True)),
                ('unique_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='tests.NewProject')),
            ],
        ),
        migrations.CreateModel(
            name='cementConsistencyTest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_name', models.CharField(max_length=500)),
                ('wt_of_cement_1', models.FloatField(blank=True, null=True)),
                ('wt_of_cement_2', models.FloatField(blank=True, null=True)),
                ('wt_of_cement_3', models.FloatField(blank=True, null=True)),
                ('wt_of_cement_4', models.FloatField(blank=True, null=True)),
                ('wt_of_water_added_1', models.FloatField(blank=True, null=True)),
                ('wt_of_water_added_2', models.FloatField(blank=True, null=True)),
                ('wt_of_water_added_3', models.FloatField(blank=True, null=True)),
                ('wt_of_water_added_4', models.FloatField(blank=True, null=True)),
                ('initial_reading_of_indicator_1', models.FloatField(blank=True, null=True)),
                ('initial_reading_of_indicator_2', models.FloatField(blank=True, null=True)),
                ('initial_reading_of_indicator_3', models.FloatField(blank=True, null=True)),
                ('initial_reading_of_indicator_4', models.FloatField(blank=True, null=True)),
                ('final_reading_of_indicator_1', models.FloatField(blank=True, null=True)),
                ('final_reading_of_indicator_2', models.FloatField(blank=True, null=True)),
                ('final_reading_of_indicator_3', models.FloatField(blank=True, null=True)),
                ('final_reading_of_indicator_4', models.FloatField(blank=True, null=True)),
                ('percentage_of_water_added_1', models.FloatField(blank=True, null=True)),
                ('percentage_of_water_added_2', models.FloatField(blank=True, null=True)),
                ('percentage_of_water_added_3', models.FloatField(blank=True, null=True)),
                ('percentage_of_water_added_4', models.FloatField(blank=True, null=True)),
                ('sampleLocation', models.CharField(blank=True, max_length=100)),
                ('cementSource', models.CharField(blank=True, max_length=100)),
                ('normal_consistency_of_cement', models.IntegerField(default=31)),
                ('date_of_sampling', models.DateTimeField()),
                ('date_of_casting', models.DateTimeField()),
                ('water_by_cement_ratio', models.FloatField(blank=True, null=True)),
                ('sampled_by', models.CharField(max_length=500)),
                ('penetration_of_plunger_1', models.FloatField(blank=True, null=True)),
                ('penetration_of_plunger_2', models.FloatField(blank=True, null=True)),
                ('penetration_of_plunger_3', models.FloatField(blank=True, null=True)),
                ('penetration_of_plunger_4', models.FloatField(blank=True, null=True)),
                ('average_value', models.FloatField(blank=True, null=True)),
                ('unique_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='tests.NewProject')),
            ],
        ),
        migrations.CreateModel(
            name='cementCompressive',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_name', models.CharField(default='Cement Compressive Test', max_length=500)),
                ('cement_w', models.FloatField(blank=True, null=True)),
                ('sand_w', models.FloatField(blank=True, null=True)),
                ('totalMass', models.FloatField(blank=True, null=True)),
                ('water', models.FloatField(blank=True, null=True)),
                ('W_by_c', models.FloatField(blank=True, null=True)),
                ('sampleLocation', models.CharField(blank=True, max_length=100)),
                ('cementSource', models.CharField(blank=True, max_length=100)),
                ('waterRequired', models.FloatField(blank=True, null=True)),
                ('NormalConsistencyOfCement', models.FloatField(blank=True, null=True)),
                ('mixPorportion', models.FloatField(blank=True, null=True)),
                ('length_c', models.FloatField(default=7)),
                ('breadth_c', models.FloatField(default=7)),
                ('height_c', models.FloatField(default=7)),
                ('date_of_casting', models.DateTimeField(auto_now_add=True)),
                ('area_of_cube', models.FloatField(default=49)),
                ('volume_of_cube', models.FloatField(default=343)),
                ('cube_weight_1', models.FloatField(blank=True, null=True)),
                ('cube_weight_2', models.FloatField(blank=True, null=True)),
                ('cube_weight_3', models.FloatField(blank=True, null=True)),
                ('cube_weight_4', models.FloatField(blank=True, null=True)),
                ('cube_weight_5', models.FloatField(blank=True, null=True)),
                ('cube_weight_6', models.FloatField(blank=True, null=True)),
                ('cube_weight_7', models.FloatField(blank=True, null=True)),
                ('cube_weight_8', models.FloatField(blank=True, null=True)),
                ('cube_weight_9', models.FloatField(blank=True, null=True)),
                ('cube_load_1', models.FloatField(blank=True, null=True)),
                ('cube_load_2', models.FloatField(blank=True, null=True)),
                ('cube_load_3', models.FloatField(blank=True, null=True)),
                ('cube_load_4', models.FloatField(blank=True, null=True)),
                ('cube_load_5', models.FloatField(blank=True, null=True)),
                ('cube_load_6', models.FloatField(blank=True, null=True)),
                ('cube_load_7', models.FloatField(blank=True, null=True)),
                ('cube_load_8', models.FloatField(blank=True, null=True)),
                ('cube_load_9', models.FloatField(blank=True, null=True)),
                ('strength_1', models.FloatField(blank=True, null=True)),
                ('strength_2', models.FloatField(blank=True, null=True)),
                ('strength_3', models.FloatField(blank=True, null=True)),
                ('strength_4', models.FloatField(blank=True, null=True)),
                ('strength_5', models.FloatField(blank=True, null=True)),
                ('strength_6', models.FloatField(blank=True, null=True)),
                ('strength_7', models.FloatField(blank=True, null=True)),
                ('strength_8', models.FloatField(blank=True, null=True)),
                ('strength_9', models.FloatField(blank=True, null=True)),
                ('avg_strength_1', models.FloatField(blank=True, null=True)),
                ('avg_strength_2', models.FloatField(blank=True, null=True)),
                ('avg_strength_3', models.FloatField(blank=True, null=True)),
                ('density_1', models.FloatField(blank=True, null=True)),
                ('density_2', models.FloatField(blank=True, null=True)),
                ('density_3', models.FloatField(blank=True, null=True)),
                ('density_4', models.FloatField(blank=True, null=True)),
                ('density_5', models.FloatField(blank=True, null=True)),
                ('density_6', models.FloatField(blank=True, null=True)),
                ('density_7', models.FloatField(blank=True, null=True)),
                ('density_8', models.FloatField(blank=True, null=True)),
                ('density_9', models.FloatField(blank=True, null=True)),
                ('avg_density_1', models.FloatField(blank=True, null=True)),
                ('avg_density_2', models.FloatField(blank=True, null=True)),
                ('avg_density_3', models.FloatField(blank=True, null=True)),
                ('unique_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='tests.NewProject')),
            ],
        ),
    ]
